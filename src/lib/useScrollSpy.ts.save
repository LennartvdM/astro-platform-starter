# from repo root
mkdir -p src/lib
nano src/lib/useScrollSpy.ts
import { useLayoutEffect, useState } from 'react';

/**
 * Track which heading has crossed `offsetPx` from the top of the viewport.
 */
export function useScrollSpy(ids: string[], offsetPx = 120) {
  const [active, setActive] = useState(ids[0]);

  useLayoutEffect(() => {
    const els = ids.map(id => document.getElementById(id)).filter(Boolean) as HTMLElement[];
    if (!els.length) return;

    let ticking = false;
    const update = () => {
      ticking = false;
      const past = els.filter(el => el.getBoundingClientRect().top <= offsetPx);
      setActive((past.at(-1) ?? els[0]).id);
    };

    const onScroll = () => { if (!ticking) { ticking = true; requestAnimationFrame(update); } };

    window.addEventListener('scroll', onScroll, { passive: true });
    window.addEventListener('resize', update);
    update();

    return () => {
      window.removeEventListener('scroll', onScroll);
      window.removeEventListener('resize', update);
    };
  }, [ids, offsetPx]);

  /* instant update when a sidebar link dispatches “nav-activate” */
  useLayoutEffect(() => {
    const h = (e: Event) => setActive((e as CustomEvent<string>).detail);
    window.addEventListener('nav-activate', h as EventListener);
    return () => window.removeEventListener('nav-activate', h as EventListener);
  }, []);

  return active;
}

